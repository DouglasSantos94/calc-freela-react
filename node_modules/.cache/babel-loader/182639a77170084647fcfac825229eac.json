{"ast":null,"code":"var _jsxFileName = \"/home/douglas/web/calc-freela-react-novo/calc-freela-react/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport './Form.css';\nimport CardForm from './CardForm/CardForm';\nimport Button from './Button/Button';\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dailyTime: {\n        htmlFor: \"daily-time\",\n        label: \"Tempo diário investido no projeto\",\n        idInput: \"daily-time\",\n        nameInput: \"daily-time\"\n      },\n      daysWorking: {\n        htmlFor: \"days-working\",\n        label: \"Dias de férias por projeto\",\n        idInput: \"days-working\",\n        nameInput: \"days-working\"\n      },\n      daysVacation: {\n        htmlFor: \"days-vacation\",\n        label: \"Tempo diário investido no projeto\",\n        idInput: \"days-vacation\",\n        nameInput: \"days-vacation\"\n      },\n      projectValue: {\n        htmlFor: \"project-value\",\n        label: \"Valor total do projeto\",\n        idInput: \"project-value\",\n        nameInput: \"project-value\"\n      }\n    };\n  }\n\n  render() {\n    const changeFormSend = () => {\n      document.addEventListener('submit', function (e) {\n        if (e.target.nodeName === 'FORM') e.preventDefault();\n      });\n    };\n\n    const calcValue = () => {\n      changeFormSend();\n      console.log(Form);\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: calcValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"O que levar em considera\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardForm, {\n      htmlFor: this.state.dailyTime.htmlFor,\n      label: this.state.dailyTime.label,\n      idInput: this.state.dailyTime.idInput,\n      nameInput: this.state.dailyTime.nameInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Tempo demandado das horas em off que voc\\xEA possui.  As horas em off seriam depois do trabalho, escola ou aquele tempinho vago no final do dia que voc\\xEA usa pra relaxar e descontrair.\"), /*#__PURE__*/React.createElement(CardForm, {\n      htmlFor: this.state.daysWorking.htmlFor,\n      label: this.state.daysWorking.label,\n      idInput: this.state.daysWorking.idInput,\n      nameInput: this.state.daysWorking.nameInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Nem sempre voc\\xEA poder\\xE1 se dedicar a um projeto em todos os dias da sua semana. Por isso, \\xE9 importante saber a quantidade correta de dias trabalhados no projeto para realizar o c\\xE1lculo.\"), /*#__PURE__*/React.createElement(CardForm, {\n      htmlFor: this.state.daysVacation.htmlFor,\n      label: this.state.daysVacation.label,\n      idInput: this.state.daysVacation.idInput,\n      nameInput: this.state.daysVacation.nameInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Assim como em qualquer modalidade de trabalho, nos freelas \\xE9 necess\\xE1rio calcular os encargos referentes \\xE0s f\\xE9rias. Use como base o n\\xFAmero de dias de f\\xE9rias no per\\xEDodo do projeto.\"), /*#__PURE__*/React.createElement(CardForm, {\n      htmlFor: \"project-value\",\n      label: \"Valor total a receber pelo projeto\",\n      idInput: \"project-value\",\n      nameInput: \"project-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Essa \\xE9 a principal vari\\xE1vel para calcular o valor da sua hora em um projeto. Com base no valor total que voc\\xEA pretende receber pelo projeto, ser\\xE3o feitos todos os outros c\\xE1lculos.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Calcular\")));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/douglas/web/calc-freela-react-novo/calc-freela-react/src/components/Form/Form.jsx"],"names":["React","CardForm","Button","Form","Component","state","dailyTime","htmlFor","label","idInput","nameInput","daysWorking","daysVacation","projectValue","render","changeFormSend","document","addEventListener","e","target","nodeName","preventDefault","calcValue","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,OAAO,EAAE,YADF;AAEPC,QAAAA,KAAK,EAAE,mCAFA;AAGPC,QAAAA,OAAO,EAAE,YAHF;AAIPC,QAAAA,SAAS,EAAE;AAJJ,OADP;AAOJC,MAAAA,WAAW,EAAE;AACLJ,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,KAAK,EAAE,4BAFF;AAGLC,QAAAA,OAAO,EAAE,cAHJ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAPT;AAaJE,MAAAA,YAAY,EAAE;AACVL,QAAAA,OAAO,EAAE,eADC;AAEVC,QAAAA,KAAK,EAAE,mCAFG;AAGVC,QAAAA,OAAO,EAAE,eAHC;AAIVC,QAAAA,SAAS,EAAE;AAJD,OAbV;AAmBJG,MAAAA,YAAY,EAAE;AACVN,QAAAA,OAAO,EAAE,eADC;AAEVC,QAAAA,KAAK,EAAE,wBAFG;AAGVC,QAAAA,OAAO,EAAE,eAHC;AAIVC,QAAAA,SAAS,EAAE;AAJD;AAnBV,KAFuB;AAAA;;AA6B/BI,EAAAA,MAAM,GAAE;AAEJ,UAAMC,cAAc,GAAG,MAAM;AACzBC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,UAASC,CAAT,EAAW;AAC3C,YAAGA,CAAC,CAACC,MAAF,CAASC,QAAT,KAAsB,MAAzB,EAAiCF,CAAC,CAACG,cAAF;AACpC,OAFD;AAGH,KAJD;;AAMA,UAAMC,SAAS,GAAG,MAAM;AACpBP,MAAAA,cAAc;AACdQ,MAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACH,KAHD;;AAKA,wBACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEmB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADA,eAEA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC,SAAX,CAAqBC,OAAxC;AAAiD,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,KAA7E;AAAoF,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,OAAlH;AAA2H,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC,SAAX,CAAqBI,SAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oMADJ,eAGI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,WAAX,CAAuBJ,OAA1C;AAAmD,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWM,WAAX,CAAuBH,KAAjF;AAAwF,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWM,WAAX,CAAuBF,OAAxH;AAAiI,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWM,WAAX,CAAuBD,SAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8MAHJ,eAKI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWO,YAAX,CAAwBL,OAA3C;AAAoD,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWO,YAAX,CAAwBJ,KAAnF;AAA0F,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWO,YAAX,CAAwBH,OAA3H;AAAoI,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWO,YAAX,CAAwBF,SAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iNALJ,eAOI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAC,eAAlB;AAAkC,MAAA,KAAK,EAAC,oCAAxC;AAA6E,MAAA,OAAO,EAAC,eAArF;AAAqG,MAAA,SAAS,EAAC,eAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4MAPJ,CAFA,eAWA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAXA,CADJ;AAkBH;;AA5D8B;;AA+DnC,eAAeP,IAAf","sourcesContent":["import React from 'react';\nimport './Form.css'\nimport CardForm from './CardForm/CardForm'\nimport Button from './Button/Button'\n\nclass Form extends React.Component {\n\n    state = {\n        dailyTime: {\n            htmlFor: \"daily-time\",\n            label: \"Tempo diário investido no projeto\",\n            idInput: \"daily-time\", \n            nameInput: \"daily-time\"\n        },\n        daysWorking: {\n                htmlFor: \"days-working\",\n                label: \"Dias de férias por projeto\",\n                idInput: \"days-working\", \n                nameInput: \"days-working\"\n        },\n        daysVacation: {\n            htmlFor: \"days-vacation\",\n            label: \"Tempo diário investido no projeto\",\n            idInput: \"days-vacation\", \n            nameInput: \"days-vacation\"\n            },\n        projectValue: {\n            htmlFor: \"project-value\",\n            label: \"Valor total do projeto\",\n            idInput: \"project-value\", \n            nameInput: \"project-value\"\n            }\n    }\n\n    render(){\n\n        const changeFormSend = () => {\n            document.addEventListener('submit', function(e){\n                if(e.target.nodeName === 'FORM') e.preventDefault()\n            })\n        }\n        \n        const calcValue = () => {\n            changeFormSend();\n            console.log(Form)\n        }\n        \n        return (\n            <form className=\"form\" onSubmit={calcValue}>\n            <legend>O que levar em consideração</legend>\n            <div className=\"cards\">\n                <CardForm htmlFor={this.state.dailyTime.htmlFor} label={this.state.dailyTime.label} idInput={this.state.dailyTime.idInput} nameInput={this.state.dailyTime.nameInput}>Tempo demandado das horas em off que você possui.  As horas em off seriam depois do trabalho, escola ou aquele tempinho vago no final do dia que você usa pra relaxar e descontrair.</CardForm>\n                \n                <CardForm htmlFor={this.state.daysWorking.htmlFor} label={this.state.daysWorking.label} idInput={this.state.daysWorking.idInput} nameInput={this.state.daysWorking.nameInput}>Nem sempre você poderá se dedicar a um projeto em todos os dias da sua semana. Por isso, é importante saber a quantidade correta de dias trabalhados no projeto para realizar o cálculo.</CardForm>\n\n                <CardForm htmlFor={this.state.daysVacation.htmlFor} label={this.state.daysVacation.label} idInput={this.state.daysVacation.idInput} nameInput={this.state.daysVacation.nameInput}>Assim como em qualquer modalidade de trabalho, nos freelas é necessário calcular os encargos referentes às férias. Use como base o número de dias de férias no período do projeto.</CardForm>\n\n                <CardForm htmlFor=\"project-value\" label=\"Valor total a receber pelo projeto\" idInput=\"project-value\" nameInput=\"project-value\">Essa é a principal variável para calcular o valor da sua hora em um projeto. Com base no valor total que você pretende receber pelo projeto, serão feitos todos os outros cálculos.</CardForm>\n            </div>\n            <div className=\"buttons\">\n                <Button type=\"reset\">Limpar</Button>\n                <Button type=\"submit\">Calcular</Button>\n            </div>\n        </form>\n    );\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}