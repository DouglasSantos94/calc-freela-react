{"ast":null,"code":"var _jsxFileName = \"/home/douglas/web/calc-freela-react-novo/calc-freela-react/src/components/Form/Form.jsx\";\nimport React from 'react';\nimport './Form.css';\nimport CardForm from './CardForm/CardForm';\nimport Button from './Button/Button';\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dailyTime: {\n        id: \"daily-time\",\n        label: \"Tempo diário investido no projeto\",\n        description: \"Tempo demandado das horas em off que você possui.  As horas em off seriam depois do trabalho, escola ou aquele tempinho vago no final do dia que você usa pra relaxar e descontrair.\"\n      },\n      daysWorking: {\n        id: \"days-working\",\n        label: \"Dias de férias por projeto\",\n        description: \"Nem sempre você poderá se dedicar a um projeto em todos os dias da sua semana. Por isso, é importante saber a quantidade correta de dias trabalhados no projeto para realizar o cálculo.\"\n      },\n      daysVacation: {\n        id: \"days-vacation\",\n        label: \"Dias de férias por projeto\",\n        description: \"Assim como em qualquer modalidade de trabalho, nos freelas é necessário calcular os encargos referentes às férias. Use como base o número de dias de férias no período do projeto.\"\n      },\n      projectValue: {\n        id: \"project-value\",\n        label: \"Valor total a receber pelo projeto\",\n        description: \"Essa é a principal variável para calcular o valor da sua hora em um projeto. Com base no valor total que você pretende receber pelo projeto, serão feitos todos os outros cálculos.\"\n      },\n      result: {\n        children: '',\n        className: 'closed-result'\n      }\n    };\n    this.variables = {\n      dailyTime: 0,\n      daysWorking: 0,\n      daysVacation: 0,\n      projectValue: 0,\n      valorHora: 0\n    };\n\n    this.calcValueHandler = () => {\n      document.addEventListener('submit', e => {\n        if (e.target.nodeName === 'FORM') e.preventDefault();\n      });\n      let valorHora = this.variables.projectValue / (this.variables.daysWorking * 4 * this.variables.dailyTime) + this.variables.daysVacation * this.variables.daysWorking * this.variables.dailyTime || 0;\n      this.variables.valorHora = valorHora;\n      this.openResultHandler(valorHora);\n    };\n\n    this.changeValueHandler = event => {\n      const input = event.target;\n\n      if (input.id === 'daily-time') {\n        this.variables.dailyTime = input.valueAsNumber;\n      } else if (input.id === 'days-vacation') {\n        this.variables.daysVacation = input.valueAsNumber;\n      } else if (input.id === 'days-working') {\n        this.variables.daysWorking = input.valueAsNumber;\n      } else {\n        this.variables.projectValue = input.valueAsNumber;\n      }\n    };\n\n    this.openResultHandler = value => {\n      this.setState({\n        result: {\n          children: 'O valor da sua hora é R$' + value.toFixed(2),\n          className: 'opened-result'\n        }\n      });\n      console.log(this.valorHora);\n      console.log(value);\n    };\n\n    this.closeResultHandler = () => {\n      this.setState({\n        result: {\n          children: 'O valor da sua hora é R$' + this.variables.valorHora.toFixed(2),\n          className: 'closed-result'\n        }\n      });\n      this.variables.valorHora = 0;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.calcValueHandler,\n      onReset: this.closeResultHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"O que levar em considera\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardForm, {\n      id: this.state.dailyTime.id,\n      label: this.state.dailyTime.label,\n      inputChanged: this.changeValueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.state.dailyTime.description), /*#__PURE__*/React.createElement(CardForm, {\n      id: this.state.daysWorking.id,\n      label: this.state.daysWorking.label,\n      inputChanged: this.changeValueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, this.state.daysWorking.description), /*#__PURE__*/React.createElement(CardForm, {\n      id: this.state.daysVacation.id,\n      label: this.state.daysVacation.label,\n      inputChanged: this.changeValueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.state.daysVacation.description), /*#__PURE__*/React.createElement(CardForm, {\n      id: this.state.projectValue.id,\n      label: this.state.projectValue.label,\n      inputChanged: this.changeValueHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, this.state.projectValue.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Limpar\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Calcular\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.result.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, this.state.result.children));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/douglas/web/calc-freela-react-novo/calc-freela-react/src/components/Form/Form.jsx"],"names":["React","CardForm","Button","Form","Component","state","dailyTime","id","label","description","daysWorking","daysVacation","projectValue","result","children","className","variables","valorHora","calcValueHandler","document","addEventListener","e","target","nodeName","preventDefault","openResultHandler","changeValueHandler","event","input","valueAsNumber","value","setState","toFixed","console","log","closeResultHandler","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Form.css';\nimport CardForm from './CardForm/CardForm';\nimport Button from './Button/Button';\n\nclass Form extends React.Component {\n    state = {\n        dailyTime: {\n            id: \"daily-time\",\n            label: \"Tempo diário investido no projeto\",\n            description: \"Tempo demandado das horas em off que você possui.  As horas em off seriam depois do trabalho, escola ou aquele tempinho vago no final do dia que você usa pra relaxar e descontrair.\",\n        },\n        daysWorking: {\n            id: \"days-working\",\n            label: \"Dias de férias por projeto\",\n            description: \"Nem sempre você poderá se dedicar a um projeto em todos os dias da sua semana. Por isso, é importante saber a quantidade correta de dias trabalhados no projeto para realizar o cálculo.\",\n        },\n        daysVacation: {\n            id: \"days-vacation\",\n            label: \"Dias de férias por projeto\",\n            description: \"Assim como em qualquer modalidade de trabalho, nos freelas é necessário calcular os encargos referentes às férias. Use como base o número de dias de férias no período do projeto.\",\n        },\n        projectValue: {\n            id: \"project-value\",\n            label: \"Valor total a receber pelo projeto\",\n            description: \"Essa é a principal variável para calcular o valor da sua hora em um projeto. Com base no valor total que você pretende receber pelo projeto, serão feitos todos os outros cálculos.\",\n        },\n        result: {\n            children: '',\n            className: 'closed-result'\n        }\n    }\n\n    variables = {\n        dailyTime: 0,\n        daysWorking: 0,\n        daysVacation: 0,\n        projectValue: 0,\n        valorHora: 0\n    }\n\n    calcValueHandler = () => {\n        document.addEventListener('submit', e =>{\n            if(e.target.nodeName === 'FORM') e.preventDefault();\n        })\n\n        let valorHora = ( this.variables.projectValue / (this.variables.daysWorking * 4 * this.variables.dailyTime )) + ( this.variables.daysVacation * this.variables.daysWorking * this.variables.dailyTime ) || 0;\n        \n        this.variables.valorHora = valorHora;\n        this.openResultHandler(valorHora);\n    }\n\n    changeValueHandler = (event) => {\n        const input = event.target;\n        if(input.id === 'daily-time'){\n            this.variables.dailyTime = input.valueAsNumber\n        } else if(input.id === 'days-vacation'){\n            this.variables.daysVacation = input.valueAsNumber\n        } else if(input.id === 'days-working') {\n            this.variables.daysWorking = input.valueAsNumber\n        } else {\n            this.variables.projectValue = input.valueAsNumber\n        }\n    }\n\n    openResultHandler = (value) => {\n        this.setState({\n            result: {\n                children: 'O valor da sua hora é R$' + value.toFixed(2),\n                className: 'opened-result'\n            },\n        });\n        console.log(this.valorHora)\n        console.log(value)\n    }\n    \n    closeResultHandler = () => {\n        this.setState({\n            result: {\n                children: 'O valor da sua hora é R$' + this.variables.valorHora.toFixed(2),\n                className: 'closed-result'\n            },\n        })\n        this.variables.valorHora = 0;\n    }\n\n    render(){\n        \n        return (\n            <form className=\"form\" onSubmit={(this.calcValueHandler)} onReset={this.closeResultHandler}>\n                <legend>O que levar em consideração</legend>\n                <div className=\"cards\">\n                <CardForm id={this.state.dailyTime.id} label={this.state.dailyTime.label} inputChanged={this.changeValueHandler}>{this.state.dailyTime.description}</CardForm>\n\n                <CardForm id={this.state.daysWorking.id} label={this.state.daysWorking.label} inputChanged={this.changeValueHandler}>{this.state.daysWorking.description}</CardForm>\n\n                <CardForm id={this.state.daysVacation.id} label={this.state.daysVacation.label} inputChanged={this.changeValueHandler}>{this.state.daysVacation.description}</CardForm>\n\n                <CardForm id={this.state.projectValue.id} label={this.state.projectValue.label} inputChanged={this.changeValueHandler}>{this.state.projectValue.description}</CardForm>\n                </div>\n                <div className=\"buttons\">\n                    <Button type=\"reset\">Limpar</Button>\n                    <Button type=\"submit\">Calcular</Button>\n                </div>\n                <div className={this.state.result.className}>\n                    {this.state.result.children}\n                </div>\n            </form>\n        );\n\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}